# .go-mutesting-tier1.yml  
# Tier 1 mutation testing configuration for critical business logic
# Target: Complete under 60 seconds with comprehensive mutator coverage
# Focus: Core Terraform analysis, orchestration, and CLI functionality

test:
  command: "go test -v -run=."
  timeout: "30s"

mutators:
  # Comprehensive mutator set for critical business logic
  - name: "binary-operator"
    enabled: true
    
  - name: "conditional-boundaries"
    enabled: true
    
  - name: "conditional-negation"
    enabled: true
    
  - name: "statement-removal"
    enabled: true
    
  - name: "constant-replacement"
    enabled: true
    
  - name: "boolean-inversion"
    enabled: true

# Target critical business logic files only
include:
  - "analyzer.go"      # Core Terraform parsing and analysis
  - "orchestrator.go"  # Workflow coordination and error handling
  - "cmd.go"          # CLI interface and configuration

# Exclude non-critical and supporting files
exclude:
  - "*_test.go"
  - "cloner.go"
  - "reporter.go"
  - "markdown.go"
  - "vendor/*"
  - ".git/*"
  - "*.pb.go"
  - "*_gen.go"

# High threshold for critical business logic
threshold: 95

# Fail build if critical logic doesn't meet high standards
fail_on_low_score: true

# Performance optimizations for Tier 1
options:
  parallel: true
  max_workers: 2
  timeout_multiplier: 0.8
  max_mutations: 50
  
# Advanced mutation strategies for business logic
mutation_strategies:
  # Target specific critical functions in analyzer.go
  critical_functions:
    - "parseHCL"
    - "extractProviders" 
    - "extractResources"
    - "parseBackend"
    - "validateTerraform"
    
  # Target orchestration patterns in orchestrator.go
  orchestration_patterns:
    - "processRepositories"
    - "handleError"
    - "validateConfig"
    
  # Target CLI command patterns in cmd.go
  cli_patterns:
    - "validateFlags"
    - "executeCommand"
    - "parseArgs"